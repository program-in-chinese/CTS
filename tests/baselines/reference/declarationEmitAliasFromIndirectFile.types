=== tests/cases/compiler/locale.d.ts ===
export type Locale = {
>Locale : Locale

    weekdays: {
>weekdays : { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }

        shorthand: [string, string, string, string, string, string, string];
>shorthand : [string, string, string, string, string, string, string]

        longhand: [string, string, string, string, string, string, string];
>longhand : [string, string, string, string, string, string, string]

    };
};
export type CustomLocale = {
>CustomLocale : CustomLocale

    weekdays: {
>weekdays : { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }

        shorthand: [string, string, string, string, string, string, string];
>shorthand : [string, string, string, string, string, string, string]

        longhand: [string, string, string, string, string, string, string];
>longhand : [string, string, string, string, string, string, string]

    };
};
export type key = "ar" | "bg";
>key : key

=== tests/cases/compiler/instance.d.ts ===
import { Locale, CustomLocale, key as LocaleKey } from "./locale";
>Locale : any
>CustomLocale : any
>key : any
>LocaleKey : any

export interface FlatpickrFn {
>FlatpickrFn : FlatpickrFn

    l10ns: {[k in LocaleKey]?: CustomLocale } & { default: Locale };
>l10ns : { ar?: CustomLocale; bg?: CustomLocale; } & { default: Locale; }
>k : k
>LocaleKey : LocaleKey
>CustomLocale : CustomLocale
>default : Locale
>Locale : Locale
}

=== tests/cases/compiler/app.ts ===
import { FlatpickrFn } from "./instance";
>FlatpickrFn : any

const fp = { l10ns: {} } as FlatpickrFn;
>fp : FlatpickrFn
>{ l10ns: {} } as FlatpickrFn : FlatpickrFn
>{ l10ns: {} } : { l10ns: {}; }
>l10ns : {}
>{} : {}
>FlatpickrFn : FlatpickrFn

export default fp.l10ns;
>fp.l10ns : { ar?: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; bg?: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; } & { default: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; }
>fp : FlatpickrFn
>l10ns : { ar?: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; bg?: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; } & { default: { weekdays: { shorthand: [string, string, string, string, string, string, string]; longhand: [string, string, string, string, string, string, string]; }; }; }

